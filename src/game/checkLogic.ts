import {Board} from "./Boards";
// import { Piece } from "./pieces";

export const isKingInCheck = (board: Board, color: "white" | "black"): boolean => {
    // –ï—Å–ª–∏ –∫–æ—Ä–æ–ª—è –Ω–µ—Ç –Ω–∞ –¥–æ—Å–∫–µ ‚Äî –æ–Ω –±—ã–ª –ø–æ–±–∏—Ç, –Ω–æ —Ç–æ–ª—å–∫–æ –Ω–µ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã!
    let kingPosition: [number, number] | null = null;
    for (let r = 0; r < board.size; r++) {
        for (let c = 0; c < board.size; c++) {
            let piece = board.grid[r][c];
            if (piece && piece.name === "King" && piece.color === color) {
                kingPosition = [r, c];
                break;
            }
        }
    }

    if (!kingPosition) {
        console.log(`üö® –û—à–∏–±–∫–∞: –∫–æ—Ä–æ–ª—å ${color} –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ –¥–æ—Å–∫–µ!`);
        return false; // ‚ö†Ô∏è –¢–µ–ø–µ—Ä—å –æ–Ω –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –ø–æ–¥ —à–∞—Ö–æ–º
    }

    const [kingRow, kingCol] = kingPosition;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞—Ç–∞–∫–æ–≤–∞–Ω –ª–∏ –∫–æ—Ä–æ–ª—å –ø—Ä–æ—Ç–∏–≤–Ω–∏–∫–æ–º
    for (let r = 0; r < board.size; r++) {
        for (let c = 0; c < board.size; c++) {
            let piece = board.grid[r][c];

            if (piece && piece.color !== color) {
                let moves = piece.getAvailableMoves(board.grid);
                if (moves.some(([mr, mc]) => mr === kingRow && mc === kingCol)) {
                    console.log(`‚ö†Ô∏è –®–∞—Ö! –ö–æ—Ä–æ–ª—å ${color} –ø–æ–¥ –∞—Ç–∞–∫–æ–π.`);
                    return true;
                }
            }
        }
    }

    
    

    return false;
};

