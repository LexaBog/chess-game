import {Board} from "./Boards";
// import { Piece } from "./pieces";

export const isKingInCheck = (board: Board, color: "white" | "black"): boolean => {
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –∫–æ—Ä–æ–ª—å –Ω–∞ –¥–æ—Å–∫–µ
    let kingPosition: [number, number] | null = null;

    for (let r = 0; r < board.size; r++) {
        for (let c = 0; c < board.size; c++) {
            let piece = board.grid[r][c];
            if (piece && piece.name === "King" && piece.color === color) {
                kingPosition = [r, c];
                break;
            }
        }
    }

    // üö® –ï—Å–ª–∏ –∫–æ—Ä–æ–ª—å –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –Ω–∞ –¥–æ—Å–∫–µ ‚Äî –∑–Ω–∞—á–∏—Ç, –µ–≥–æ —Å—ä–µ–ª–∏
    if (!kingPosition) {
        console.error(`üö® –û—à–∏–±–∫–∞: –∫–æ—Ä–æ–ª—å ${color} –±—ã–ª –ø–æ–±–∏—Ç!`);
        return true; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º true, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –º–∞—Ç
    }

    const [kingRow, kingCol] = kingPosition;

    // üëÄ –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –≤—Ä–∞–∂–µ—Å–∫–∞—è —Ñ–∏–≥—É—Ä–∞ –∞—Ç–∞–∫–æ–≤–∞—Ç—å –∫–æ—Ä–æ–ª—è
    for (let r = 0; r < board.size; r++) {
        for (let c = 0; c < board.size; c++) {
            let piece = board.grid[r][c];

            if (piece && piece.color !== color) {
                let moves = piece.getAvailableMoves(board.grid);
                if (moves.some(([mr, mc]) => mr === kingRow && mc === kingCol)) {
                    console.log(`‚ö†Ô∏è –®–∞—Ö! –ö–æ—Ä–æ–ª—å ${color} –ø–æ–¥ –∞—Ç–∞–∫–æ–π.`);
                    return true;
                }
            }
        }
    }

    return false; // ‚úÖ –®–∞—Ö–∞ –Ω–µ—Ç
};
