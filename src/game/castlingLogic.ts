import { Board } from "./Boards";
import { Piece } from "./pieces";

export const canCastle = (board: Board, king: Piece, toCol: number): boolean => {
    console.log(`–ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä–æ–∫–∏—Ä–æ–≤–∫–∏ –¥–ª—è ${king.color} –∫–æ—Ä–æ–ª—è –Ω–∞ ${toCol}`);
    console.log(`–ö–æ—Ä–æ–ª—å —É–∂–µ —Ö–æ–¥–∏–ª? ${king.hasMoved}`);
    console.log(`–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∫–æ—Ä–æ–ª—å? ${king.name === "King"}`);
    console.log(`üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–∫–∏—Ä–æ–≤–∫—É –¥–ª—è ${king.color} –∫–æ—Ä–æ–ª—è –Ω–∞ ${toCol}`);
    if (king.hasMoved || king.name !== "King") {
        console.log(`‚ùå –ö–æ—Ä–æ–ª—å —É–∂–µ —Ö–æ–¥–∏–ª (${king.hasMoved}) –∏–ª–∏ —ç—Ç–æ –Ω–µ –∫–æ—Ä–æ–ª—å (${king.name})`);
        return false; 
    }

    let backRank = king.color === "white" ? 7 : 0;
    let rookCol = toCol === 6 ? 7 : 0; // 7 (–∫–æ—Ä–æ—Ç–∫–∞—è), 0 (–¥–ª–∏–Ω–Ω–∞—è)
    // let newRookCol = toCol === 6 ? 5 : 3;

    let rook = board.grid[backRank][rookCol];

    if (!rook || rook.name !== "Rook" || rook.hasMoved) {
        console.log(`‚ùå –õ–∞–¥—å—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –∏–ª–∏ —É–∂–µ —Ö–æ–¥–∏–ª–∞`);
        return false; 
    }

    let direction = rookCol === 7 ? 1 : -1;
    for (let i = king.col + direction; i !== rookCol; i += direction) {
        if (board.grid[backRank][i]) {
            console.log(`‚ùå –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏–µ –Ω–∞ –ø—É—Ç–∏ (${backRank}, ${i})`);
            return false; 
        }
    }

    console.log(`‚úÖ –†–æ–∫–∏—Ä–æ–≤–∫–∞ –≤–æ–∑–º–æ–∂–Ω–∞!`);
    return true;
};



export const performCastle = (board: Board, king: Piece, toCol: number) => {
    let backRank = king.color === "white" ? 7 : 0;
    let rookCol = toCol === 6 ? 7 : 0;
    let newRookCol = toCol === 6 ? 5 : 3;

    let rook = board.grid[backRank][rookCol];

    if (!rook) return;

    // ‚úÖ –ü–µ—Ä–µ–¥–≤–∏–≥–∞–µ–º –∫–æ—Ä–æ–ª—è
    board.grid[king.row][king.col] = null;
    board.grid[backRank][toCol] = king;
    king.setPosition(backRank, toCol);

    // ‚úÖ –ü–µ—Ä–µ–¥–≤–∏–≥–∞–µ–º –ª–∞–¥—å—é
    board.grid[backRank][rookCol] = null;
    board.grid[backRank][newRookCol] = rook;
    rook.setPosition(backRank, newRookCol);

    console.log(`–†–æ–∫–∏—Ä–æ–≤–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞: –∫–æ—Ä–æ–ª—å ${king.color} –Ω–∞ ${toCol}, –ª–∞–¥—å—è –Ω–∞ ${newRookCol}`);
};



